"""plans: rename created_by -> created_by_id; club_id NOT NULL

Revision ID: 002735126b5e
Revises: c0f7e51853a8
Create Date: 2025-09-12 22:13:34.903002

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '002735126b5e'
down_revision: Union[str, Sequence[str], None] = 'c0f7e51853a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plans', sa.Column('created_by_id', sa.Integer(), nullable=False))
    op.alter_column('plans', 'club_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('plans_created_by_fkey'), 'plans', type_='foreignkey')
    op.create_foreign_key(None, 'plans', 'users', ['created_by_id'], ['id'], ondelete='RESTRICT')
    op.drop_column('plans', 'created_by')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plans', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'plans', type_='foreignkey')
    op.create_foreign_key(op.f('plans_created_by_fkey'), 'plans', 'users', ['created_by'], ['id'], ondelete='RESTRICT')
    op.alter_column('plans', 'club_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('plans', 'created_by_id')
    # ### end Alembic commands ###
